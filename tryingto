import random
import jpholiday
import calendar
from datetime import datetime, timedelta

# 労働者のクラス
class Worker:
    def __init__(self, name, available_days):
        self.name = name
        self.available_days = available_days
        self.total_hours = 0

# 日本のカレンダーに基づく稼働日生成
def generate_working_days(year, month):
    num_days = calendar.monthrange(year, month)[1]  # 月の日数
    working_days = []
    
    for day in range(1, num_days + 1):
        date = datetime(year, month, day)
        # 休日（土日、祝日）を除外
        if date.weekday() < 5 and not jpholiday.is_holiday(date):  # 平日かつ祝日でない
            working_days.append(date)
    return working_days

# シフト割り当て関数
def assign_shifts(workers, working_days, hours_per_day=8):
    shifts = {day: None for day in working_days}
    daily_workers = len(working_days) * hours_per_day / len(workers)
    
    for day in working_days:
        available_workers = [worker for worker in workers if day in worker.available_days]
        
        # 勤務可能者からランダムに選ぶ
        if available_workers:
            worker = random.choice(available_workers)
            shifts[day] = worker.name
            worker.total_hours += hours_per_day  # 1日8時間勤務

    return shifts

# 労働者のシフトと合計勤務時間表示
def print_worker_info(workers):
    print("\n--- 勤務者情報 ---")
    for worker in workers:
        print(f"名前: {worker.name}, 合計勤務時間: {worker.total_hours}時間")

def print_shifts(shifts):
    print("\n--- シフト表 ---")
    for day, worker_name in shifts.items():
        print(f"{day.strftime('%Y-%m-%d')} - {worker_name if worker_name else 'シフトなし'}")

# メインロジック
def main():
    # 年月の指定
    year = 2024
    month = 10  # 例：10月
    
    # 労働者の名前と勤務可能日を入力
    workers = [
        Worker("田中", {datetime(2024, 10, 2), datetime(2024, 10, 3), datetime(2024, 10, 4)}),
        Worker("佐藤", {datetime(2024, 10, 3), datetime(2024, 10, 4), datetime(2024, 10, 5)}),
        Worker("鈴木", {datetime(2024, 10, 4), datetime(2024, 10, 6), datetime(2024, 10, 7)}),
    ]
    
    # 日本のカレンダーで稼働日を生成
    working_days = generate_working_days(year, month)
    
    # シフトを割り当てる
    shifts = assign_shifts(workers, working_days)
    
    # 結果を表示
    print_shifts(shifts)
    print_worker_info(workers)

if __name__ == "__main__":
    main()
